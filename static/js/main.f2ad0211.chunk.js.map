{"version":3,"sources":["components/Navbar.tsx","App.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["haveActive","isActive","Navbar","search","useLocation","className","role","to","App","Sex","Params","PeopleFilters","useSearchParams","searchParams","setSearchParams","sex","get","query","centuries","getAll","handleClickSex","currentSex","event","preventDefault","params","URLSearchParams","all","delete","set","handleClickCenturies","currentCentury","includes","forEach","century","append","toString","onClick","male","female","type","placeholder","value","onChange","target","length","param","Loader","PersonLink","person","people","personId","useParams","name","born","died","motherName","fatherName","slug","isFindedMother","find","per","isFindedFather","SortParams","PeopleTable","sort","order","filterPeopleByCenturies","men","filter","Math","ceil","filterPeopleByQuery","queryLowerRegister","toLowerCase","handleClickSortPeople","has","desc","filtredPeople","person1","person2","localeCompare","sortPeople","result","fullFiltrationPeople","e","classNames","map","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoad","setIsLoad","isError","setIsError","useEffect","getPeople","catch","finally","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f2ad0211.chunk.js","sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nconst haveActive = ({ isActive }: { isActive: boolean }) => {\n  return isActive ? 'navbar-item has-background-grey-lighter' : 'navbar-item';\n};\n\nexport const Navbar = () => {\n  const { search } = useLocation();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={haveActive}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={haveActive}\n            to={`/people${search}`}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useSearchParams, Link, NavLink } from 'react-router-dom';\n\nenum Sex {\n  all = 'all',\n  male = 'm',\n  female = 'f',\n}\n\nenum Params {\n  sex = 'sex',\n  query = 'query',\n  centuries = 'centuries',\n}\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sex = searchParams.get(Params.sex) || '';\n  const query = searchParams.get(Params.query) || '';\n  const centuries = searchParams.getAll(Params.centuries) || '';\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    if (!event.target.value) {\n      params.delete(Params.query);\n      setSearchParams(params);\n\n      return;\n    }\n\n    params.set(Params.query, event.target.value);\n    setSearchParams(params);\n  };\n\n  const handleClickSex = (currentSex: Sex) => (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n    const params = new URLSearchParams(searchParams);\n\n    if (currentSex === Sex.all) {\n      params.delete(Params.sex);\n      setSearchParams(params);\n\n      return;\n    }\n\n    params.set(Params.sex, currentSex);\n    setSearchParams(params);\n  };\n\n  const handleClickCenturies = (currentCentury: string) => (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n\n    const params = new URLSearchParams(searchParams);\n\n    if (centuries.includes(currentCentury)) {\n      params.delete(Params.centuries);\n      centuries.forEach(century => {\n        if (century !== currentCentury) {\n          params.append(Params.centuries, century);\n        }\n      });\n\n      setSearchParams(params);\n\n      return;\n    }\n\n    params.append(Params.centuries, currentCentury);\n    setSearchParams(params);\n  };\n\n  const handleClickWithoutCenturies = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n    searchParams.delete(Params.centuries);\n    setSearchParams(searchParams);\n  };\n\n  const handleclickDeleteFilters = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n\n    const params = new URLSearchParams();\n\n    searchParams.forEach((value, param) => {\n      if (param === 'sort' || param === 'order') {\n        params.set(param, value);\n      }\n    });\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={!sex ? 'is-active' : ''}\n          to={`/people?${searchParams.toString()}`}\n          onClick={handleClickSex(Sex.all)}\n        >\n          All\n        </Link>\n\n        <Link\n          className={sex === Sex.male ? 'is-active' : ''}\n          to=\"/people\"\n          onClick={handleClickSex(Sex.male)}\n        >\n          Male\n        </Link>\n\n        <Link\n          className={sex === Sex.female ? 'is-active' : ''}\n          to=\"/people\"\n          onClick={handleClickSex(Sex.female)}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleChangeQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <NavLink\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('16') && 'is-info'}`}\n              to=\"/people?centuries=16\"\n              onClick={handleClickCenturies('16')}\n            >\n              16\n            </NavLink>\n\n            <Link\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('17') && 'is-info'}`}\n              to=\"/people?centuries=17\"\n              onClick={handleClickCenturies('17')}\n            >\n              17\n            </Link>\n\n            <Link\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('18') && 'is-info'}`}\n              to=\"/people?centuries=18\"\n              onClick={handleClickCenturies('18')}\n            >\n              18\n            </Link>\n\n            <Link\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('19') && 'is-info'}`}\n              to=\"/people?centuries=19\"\n              onClick={handleClickCenturies('19')}\n            >\n              19\n            </Link>\n\n            <Link\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('20') && 'is-info'}`}\n              to=\"/people?centuries=20\"\n              onClick={handleClickCenturies('20')}\n            >\n              20\n            </Link>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={`button is-success ${!!centuries.length && 'is-outlined'}`}\n              to=\"/people\"\n              onClick={handleClickWithoutCenturies}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to=\"/people\"\n          onClick={handleclickDeleteFilters}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nenum Sex {\n  female = 'f',\n}\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const { personId } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const haveMotherFromPeople = () => {\n    const findedMother = people.find(per => {\n      return per.name === motherName;\n    });\n\n    return findedMother;\n  };\n\n  const isFindedMother = haveMotherFromPeople();\n\n  const haveFatherFromPeople = () => {\n    const findedFather = people.find(per => {\n      return per.name === fatherName;\n    });\n\n    return findedFather;\n  };\n\n  const isFindedFather = haveFatherFromPeople();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={personId === slug\n        ? 'has-background-warning' : ''}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}?${searchParams.toString()}`}\n          className={sex === Sex.female ? 'has-text-danger' : ''}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {isFindedMother ? (\n          <Link\n            to={`/people/${isFindedMother.slug}?${searchParams.toString()}`}\n            className=\"has-text-danger\"\n          >\n            {isFindedMother.name}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {isFindedFather ? (\n          <Link\n            to={`/people/${isFindedFather.slug}?${searchParams.toString()}`}\n          >\n            {isFindedFather.name}\n          </Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nenum Sex {\n  male = 'm',\n  female = 'f',\n}\n\nenum Params {\n  sex = 'sex',\n  sort = 'sort',\n  query = 'query',\n  order = 'order',\n  centuries = 'centuries',\n}\n\nenum SortParams {\n  sex = 'sex',\n  name = 'name',\n  born = 'born',\n  died = 'died',\n  desc = 'desc',\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sex = searchParams.get(Params.sex) || '';\n  const sort = searchParams.get(Params.sort) || '';\n  const query = searchParams.get(Params.query) || '';\n  const order = searchParams.get(Params.order) || '';\n  const centuries = searchParams.getAll(Params.centuries) || '';\n\n  const filterPeopleByCenturies = (men: Person[]) => {\n    if (centuries.length > 0) {\n      return men.filter(person => {\n        const century = Math.ceil(person.born / 100);\n\n        return centuries.includes(century.toString());\n      });\n    }\n\n    return men;\n  };\n\n  const filterPeopleByQuery = (men: Person[]) => {\n    const queryLowerRegister = query.toLowerCase();\n\n    return men.filter(person => {\n      if (person.name.toLowerCase().includes(queryLowerRegister)) {\n        return person;\n      }\n\n      if (person.fatherName?.toLowerCase().includes(queryLowerRegister)) {\n        return person;\n      }\n\n      if (person.motherName?.toLowerCase().includes(queryLowerRegister)) {\n        return person;\n      }\n\n      return false;\n    });\n  };\n\n  const fullFiltrationPeople = (men: Person[]) => {\n    switch (sex) {\n      case Sex.female: {\n        const result = men.filter(person => person.sex === Sex.female);\n\n        return filterPeopleByCenturies(filterPeopleByQuery(result));\n      }\n\n      case Sex.male: {\n        const result = men.filter(person => person.sex === Sex.male);\n\n        return filterPeopleByCenturies(filterPeopleByQuery(result));\n      }\n\n      default:\n        return filterPeopleByCenturies(filterPeopleByQuery(men));\n    }\n  };\n\n  const handleClickSortPeople = (\n    event: React.MouseEvent<HTMLSpanElement>,\n    value: string,\n  ) => {\n    event.preventDefault();\n\n    switch (value) {\n      case SortParams.name: {\n        const params = new URLSearchParams(searchParams);\n\n        if (params.has(Params.order) && sort === SortParams.name) {\n          params.delete(Params.order);\n          params.delete(Params.sort);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (params.has(Params.order) && sort !== SortParams.name) {\n          params.delete(Params.order);\n          params.set(Params.sort, SortParams.name);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (sort === SortParams.name) {\n          params.set(Params.order, SortParams.desc);\n          setSearchParams(params);\n\n          break;\n        }\n\n        params.set(Params.sort, SortParams.name);\n        setSearchParams(params);\n\n        break;\n      }\n\n      case SortParams.sex: {\n        const params = new URLSearchParams(searchParams);\n\n        if (params.has(Params.order) && sort === SortParams.sex) {\n          params.delete(Params.order);\n          params.delete(Params.sort);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (params.has(Params.order) && sort !== SortParams.sex) {\n          params.delete(Params.order);\n          params.set(Params.sort, SortParams.sex);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (sort === SortParams.sex) {\n          params.set(Params.order, SortParams.desc);\n          setSearchParams(params);\n\n          break;\n        }\n\n        params.set(Params.sort, SortParams.sex);\n        setSearchParams(params);\n\n        break;\n      }\n\n      case SortParams.born: {\n        const params = new URLSearchParams(searchParams);\n\n        if (params.has(Params.order) && sort === SortParams.born) {\n          params.delete(Params.order);\n          params.delete('sort');\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (params.has(Params.order) && sort !== SortParams.born) {\n          params.delete(Params.order);\n          params.set(Params.sort, SortParams.born);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (sort === SortParams.born) {\n          params.set(Params.order, SortParams.desc);\n          setSearchParams(params);\n\n          break;\n        }\n\n        params.set(Params.sort, SortParams.born);\n        setSearchParams(params);\n\n        break;\n      }\n\n      case SortParams.died: {\n        const params = new URLSearchParams(searchParams);\n\n        if (params.has(Params.order) && sort === SortParams.died) {\n          params.delete(Params.order);\n          params.delete('sort');\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (params.has(Params.order) && sort !== SortParams.died) {\n          params.delete(Params.order);\n          params.set(Params.sort, SortParams.died);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (sort === SortParams.died) {\n          params.set(Params.order, SortParams.desc);\n          setSearchParams(params);\n\n          break;\n        }\n\n        params.set(Params.sort, SortParams.died);\n        setSearchParams(params);\n\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  };\n\n  const sortPeople = (men: Person[]) => {\n    switch (sort) {\n      case SortParams.name: {\n        if (order) {\n          return men.sort((person1, person2) => {\n            return person2.name.localeCompare(person1.name);\n          });\n        }\n\n        return men.sort((person1, person2) => {\n          return person1.name.localeCompare(person2.name);\n        });\n      }\n\n      case SortParams.sex: {\n        if (order) {\n          return men.sort((person1, person2) => {\n            return person2.sex.localeCompare(person1.sex);\n          });\n        }\n\n        return men.sort((person1, person2) => {\n          return person1.sex.localeCompare(person2.sex);\n        });\n      }\n\n      case SortParams.born: {\n        if (order) {\n          return men.sort((person1, person2) => {\n            return person2.born - person1.born;\n          });\n        }\n\n        return men.sort((person1, person2) => {\n          return person1.born - person2.born;\n        });\n      }\n\n      case SortParams.died: {\n        if (order) {\n          return men.sort((person1, person2) => {\n            return person2.died - person1.died;\n          });\n        }\n\n        return men.sort((person1, person2) => {\n          return person1.died - person2.died;\n        });\n      }\n\n      default:\n        return men;\n    }\n  };\n\n  const filtredPeople = sortPeople(fullFiltrationPeople(people));\n\n  return (\n    <>\n      {!filtredPeople.length ? (\n        <p>There are no people matching the current search criteria</p>\n      ) : (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Name\n                  <Link to=\"/people\">\n                    <span\n                      className=\"icon\"\n                      onClick={(e) => handleClickSortPeople(e, SortParams.name)}\n                      aria-hidden=\"true\"\n                    >\n                      <i className={classNames('fas', {\n                        'fa-sort': sort !== SortParams.name,\n                        'fa-sort-up': sort === SortParams.name && !order,\n                        'fa-sort-down': sort === SortParams.name && !!order,\n                      })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Sex\n                  <Link to=\"/people\">\n                    <span\n                      className=\"icon\"\n                      onClick={(e) => handleClickSortPeople(e, SortParams.sex)}\n                      aria-hidden=\"true\"\n                    >\n                      <i className={classNames('fas', {\n                        'fa-sort': sort !== SortParams.sex,\n                        'fa-sort-up': sort === SortParams.sex && !order,\n                        'fa-sort-down': sort === SortParams.sex && !!order,\n                      })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Born\n                  <Link to=\"/people\">\n                    <span\n                      className=\"icon\"\n                      onClick={(e) => handleClickSortPeople(e, SortParams.born)}\n                      aria-hidden=\"true\"\n                    >\n                      <i className={classNames('fas', {\n                        'fa-sort': sort !== SortParams.born,\n                        'fa-sort-up': sort === SortParams.born && !order,\n                        'fa-sort-down': sort === SortParams.born && !!order,\n                      })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Died\n                  <Link to=\"/people\">\n                    <span\n                      className=\"icon\"\n                      onClick={(e) => handleClickSortPeople(e, SortParams.died)}\n                      aria-hidden=\"true\"\n                    >\n                      <i className={classNames('fas', {\n                        'fa-sort': sort !== SortParams.died,\n                        'fa-sort-up': sort === SortParams.died && !order,\n                        'fa-sort-down': sort === SortParams.died && !!order,\n                      })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filtredPeople.map(person => (\n              <PersonLink key={person.slug} person={person} people={people} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoad, setIsLoad] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoad(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoad(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!!people.length && !isError && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoad && <Loader />}\n\n              {!people.length && !isLoad && !isError && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!!people.length && !isError && (\n                <PeopleTable people={people} />\n              )}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Routes>\n    <Route path=\"/\" element={<App />}>\n      <Route index element={<h1 className=\"title\">Home Page</h1>} />\n      <Route path=\"people\" element={<PeoplePage />}>\n        <Route path=\":personId\" />\n      </Route>\n\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n      <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Root />\n    </Router>,\n  );\n"],"sourceRoot":""}